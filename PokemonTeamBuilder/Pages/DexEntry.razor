@page "/pokemon"
@inject NavigationManager NavManager
@inject PokeApiService pokeService

@if (Pokemon is not null)
{
    <Div>
        <Div Class="flex justify-content-end">
            <h3>#@NatDexId</h3>
            <PokemonComponent NatDexId=@NatDexId />
        </Div>
        <Div Class="d-flex justify-content-between">
            <Div>@PokemonName</Div>
            <Div>
                @foreach (var ability in Pokemon.Abilities)
                {
                    <Button Clicked="(() => NavigateToAbility(ability))">
                        <AbilityComponent Id=@Int32.Parse(PokemonUtilities.GetResourceFromUrl(ability.Ability.Url)) IsHidden=@ability.IsHidden></AbilityComponent>
                    </Button>
                }
            </Div>
        </Div>
        <PokemonMovesComponent Pokemon=@Pokemon />
    </Div>
}

@code {
    string? PokemonName { get; set; }
    Pokemon? Pokemon { get; set; }
    int NatDexId { get; set; }

    /// <summary>
    /// Sets the name and makes the api call to get the given Pokemon's info.
    /// </summary>
    /// <returns>Asynchronous load of a task.</returns>
    protected override async Task OnInitializedAsync()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("pokemon", out var _name))
        {
            PokemonName = _name;
        }
        if (PokemonName is not null)
        {
            Pokemon = await pokeService.GetPokemon(PokemonName);
            NatDexId = Pokemon.Id;
        }
    }
    /// <summary>
    /// Navigates to the page for the selected ability.
    /// </summary>
    /// <param name="ability">The ability we want to see the page for.</param>
    private void NavigateToAbility(PokemonAbility ability)
    {
        NavManager.NavigateTo($"ability?ability={PokemonUtilities.GetResourceFromUrl(ability.Ability.Url)}");
    }

}
