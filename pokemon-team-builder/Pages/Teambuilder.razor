@page "/teambuilder"
@using pokemon_team_builder.Components
@using PokeApiNet

<h3>Teambuilder</h3>

@if (Region is not null)
{
    <div>
        <PokemonComponent PokedexId="0" />
        <PokemonComponent PokedexId="0" />
        <PokemonComponent PokedexId="0" />
        <PokemonComponent PokedexId="0" />
        <PokemonComponent PokedexId="0" />
        <PokemonComponent PokedexId="0" />

        @foreach (PokemonEntry pokemon in PokemonInDex)
        {
            <PokemonComponent PokedexId=pokemon.EntryNumber />
        }
    </div>
}

@if (Region is null)
{
    <Figure @onclick=@(() => SetRegion("kalos"))>
        <FigureImage Source="/game/xy.png" />
    </Figure>

    <Figure @onclick=@(() => SetRegion("updated-hoenn"))>
        <FigureImage Source="/game/oras.png" />
    </Figure>

    <Figure @onclick=@(() => SetRegion("alola"))>
        <FigureImage Source="/game/sm.png" />
    </Figure>

    <Figure @onclick=@(() => SetRegion("alola"))>
        <FigureImage Source="/game/usum.png" />
    </Figure>

    <Figure @onclick=@(() => SetRegion("kanto"))>
        <FigureImage Source="/game/lgpe.png" />
    </Figure>

    <Figure @onclick=@(() => SetRegion("galar"))>
        <FigureImage Source="/game/swsh.png" />
    </Figure>
}


@code {

    PokeApiClient pokeApiClient = new PokeApiClient();

    List<PokemonEntry> PokemonInDex { get; set; }

    private string Region { get; set; } = null;

    private async void SetRegion(string region)
    {
        // TODO kalos is multiple calls, alolan dex is multiple calls, usum updated-alolan dex is multiple calls, galar is multiple calls
        Region = region;
        Console.WriteLine(Region);
        Pokedex pokedex = await pokeApiClient.GetResourceAsync<Pokedex>(Region); // get all kanto pokemon 0-151
        PokemonInDex = pokedex.PokemonEntries; // all entries 0-151 with the correct id to grab
    }
}
