# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v2.0.0
        
      - name: Install WASM Tools
        run: dotnet workload install wasm-tools
        
      - name: Move To Client Directory
        run: cd ./PokemonTeamBuilder
      
      - name: Publish with dotnet
        run: dotnet publish -c Release -o release ./PokemonTeamBuilder/PokemonTeamBuilder.csproj
        
      - name: Upload Artifacts üî∫ # The project is then uploaded as an artifact named 'site'.
        uses: actions/upload-artifact@v3.0.0
        with:
          name: site
          path: build

  deploy:
      concurrency: ci-${{ github.ref }}
      needs: [build] # The second job must depend on the first one to complete before running and uses ubuntu-latest instead of windows.
      runs-on: ubuntu-latest
      steps:
        - name: Checkout üõéÔ∏è
          uses: actions/checkout@v3

        - name: Download Artifacts üîª # The built project is downloaded into the 'site' folder.
          uses: actions/download-artifact@v1
          with:
            name: site

        - name: Deploy üöÄ
          uses: JamesIves/github-pages-deploy-action@v4.3.0
          with:
            branch: gh-pages
            folder: 'site' # The deployment folder should match the name of the artifact. Even though our project builds into the 'build' folder the artifact name of 'site' must be placed here.
